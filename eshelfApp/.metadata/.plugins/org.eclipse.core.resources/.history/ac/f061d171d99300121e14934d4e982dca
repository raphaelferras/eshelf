package com.eshelf.services;

import java.io.IOException;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.protocol.BasicHttpContext;
import org.apache.http.protocol.HttpContext;

import android.os.AsyncTask;
import android.util.Log;

import com.eshelf.util.Common;

public class ServicePost {

	private final String mServiceName;
	private final int isTokenService;
	private final String 
	
	
	public ServicePost(String serviceName, int token) {
		mServiceName = serviceName;
		isTokenService = token;
	}

	public void execute() {
		new LongRunningGetIO().execute();
	}

	private class LongRunningGetIO extends AsyncTask<Void, Void, String> {

		protected String getASCIIContentFromEntity(HttpEntity entity)
				throws IllegalStateException, IOException {
			InputStream in = entity.getContent();
			StringBuffer out = new StringBuffer();
			int n = 1;
			while (n > 0) {
				byte[] b = new byte[4096];
				n = in.read(b);
				if (n > 0)
					out.append(new String(b, 0, n));
			}
			return out.toString();
		}

		@Override
		protected String doInBackground(Void... params) {
			Log.d("PH",mServiceName + ": doInBackground");
			HttpClient httpClient = new DefaultHttpClient();
			HttpContext localContext = new BasicHttpContext();
			
			String url = Common.SV_BASE_URL + mServiceName;
			if( isTokenService  == Common.WITH_TOKEN){
				url = url+ "?access_token=" + Common.accessToken;
			}
			Log.d("PH",mServiceName + " url: " + url);

			HttpPost httpPost = new HttpPost(url);
			httpPost.addHeader("Content-Type", "application/json"); 
			StringEntity entity2;
			try {
				entity2 = new StringEntity("\"{\"item_id\":\"MLB466419048"\"", "UTF-8");
			} catch (UnsupportedEncodingException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			entity2.setContentType("application/json");
			httpPost.setEntity(entity2);
			String text = null;
			try {
				HttpResponse response = httpClient.execute(httpPost,
						localContext);
				HttpEntity entity = response.getEntity();
				text = getASCIIContentFromEntity(entity);
			} catch (Exception e) {
				return e.getLocalizedMessage();
			}
			return text;
		}

		protected void onPostExecute(String results) {
			if (results != null) {
				Log.d("PH", mServiceName + " results: " + results);
				work(results);
			} else Log.d("PH", "result is NULL");
		}
	}
	
	public void work(String result){
		
	}
}
